{"version":3,"sources":["webpack://alecture/./pages/LogIn/index.tsx"],"names":["data","error","revalidate","mutate","useSWR","fetcher","loginError","setLogInError","useState","email","onChangeEmail","useInput","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","response","catch","statusCode","to","id","type","name","value","onChange"],"mappings":"8NAQA,MA0DA,EA1Dc,KACZ,MAAM,KAAEA,EAAF,MAAQC,EAAR,WAAeC,EAAf,OAA2BC,IAAWC,QAAO,aAAcC,MAC1DC,EAAYC,IAAiBC,eAAS,IACtCC,EAAOC,IAAiBC,OAAS,KACjCC,EAAUC,IAAoBF,OAAS,IACxCG,GAAWC,kBACdC,IACCA,EAAEC,iBACFV,GAAc,GACdW,SACQ,mBACN,CACET,QACAG,YACC,CACCO,iBAAiB,IAEpBC,MAAMC,IACHnB,OAEHoB,OAAOrB,IACJM,EAAmD,MAArCN,EAAMoB,UAAUrB,MAAMuB,iBAG5C,CAACd,EAAOG,IAGV,OAAGZ,EACQ,gBAAC,KAAD,CAAUwB,GAAG,iCAItB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMX,SAAUA,GACd,gBAAC,KAAD,CAAOW,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOnB,EAAOoB,SAAUnB,MAGxE,gBAAC,KAAD,CAAOe,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOhB,EAAUiB,SAAUhB,KAEjFP,GAAc,gBAAC,KAAD,kCAEjB,gBAAC,KAAD,CAAQoB,KAAK,UAAb,QAEF,gBAAC,KAAD,sBAEE,gBAAC,KAAD,CAAMF,GAAG,WAAT","file":"695.js","sourcesContent":["import useInput from '@hooks/useInput';\r\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from '@pages/SignUp/styles';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\nconst LogIn = () => {\r\n  const { data, error, revalidate, mutate } = useSWR('/api/users', fetcher);\r\n  const [loginError, setLogInError] = useState(false);\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setLogInError(false);\r\n      axios\r\n        .post('/api/users/login', \r\n        {\r\n          email,\r\n          password,\r\n        }, {\r\n            withCredentials: true,\r\n        })\r\n        .then((response) => {\r\n            revalidate();\r\n        })\r\n        .catch((error) => {\r\n            setLogInError(error.response?.data?.statusCode === 401);\r\n          });\r\n    },\r\n    [email, password],\r\n  );\r\n\r\n  if(data) {\r\n      return <Redirect to=\"/workspace/sleact/channel/일반\" />\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <Header>Sleact</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label id=\"email-label\">\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-label\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n          {loginError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\r\n        </Label>\r\n        <Button type=\"submit\">로그인</Button>\r\n      </Form>\r\n      <LinkContainer>\r\n        아직 회원이 아니신가요?&nbsp;\r\n        <Link to=\"/signup\">회원가입 하러가기</Link>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n"],"sourceRoot":""}