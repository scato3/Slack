{"version":3,"sources":["webpack://alecture/./pages/Channel/styles.tsx","webpack://alecture/./pages/Channel/index.tsx"],"names":["Container","Header","DragOver","workspace","channel","useParams","data","myData","useSWR","fetcher","chat","onChangeChat","setChat","useInput","channelData","chatData","mutate","mutateChat","revalidate","setSize","useSWRInfinite","index","channelMembersData","socket","useSocket","isReachingEnd","length","scrollbarRef","useRef","showInviteChannelModal","setShowInviteChannelModal","useState","dragOver","setDragOver","onSubmitForm","useCallback","e","preventDefault","console","log","trim","savedChat","prevChatData","unshift","id","content","UserId","User","ChannelId","Channel","createdAt","Date","then","current","scrollToBottom","axios","catch","error","onMessage","name","startsWith","getScrollHeight","getClientHeight","getScrollTop","getValues","setTimeout","useEffect","on","off","onClickInviteChannel","onCloseModal","onDrop","formData","FormData","target","files","i","file","getAsFile","append","dataTransfer","items","kind","onDragOver","chatSections","makeSection","flat","reverse","className","onClick","aria-label","data-sk","type","aria-hidden","ChatList","ref","ChatBox","InviteChannelModal","show"],"mappings":"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","file":"256.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  height: calc(100vh - 38px);\r\n  flex-flow: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 64px;\r\n  display: flex;\r\n  width: 100%;\r\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n  box-shadow: 0 1px 0 var(--saf-0);\r\n  padding: 20px 16px 20px 20px;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  \r\n  & .header-right {\r\n    display: flex;\r\n    flex: 1;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const DragOver = styled.div`\r\n  position: absolute;\r\n  top: 64px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(100% - 64px);\r\n  background: white;\r\n  opacity: 0.7;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 40px;\r\n`;","import ChatBox from '@components/ChatBox';\r\nimport ChatList from '@components/ChatList';\r\nimport InviteChannelModal from '@components/InviteChannelModal';\r\nimport useInput from '@hooks/useInput';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { Container, Header, DragOver } from '@pages/Channel/styles';\r\nimport { IChannel, IChat, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport makeSection from '@utils/makeSection';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { useParams } from 'react-router';\r\nimport useSWR, { useSWRInfinite } from 'swr';\r\n\r\nconst Channel = () => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const { data: myData } = useSWR('/api/users', fetcher);\r\n  const [chat, onChangeChat, setChat] = useInput('');\r\n  const { data: channelData } = useSWR<IChannel>(`/api/workspaces/${workspace}/channels/${channel}`, fetcher);\r\n  const { data: chatData, mutate: mutateChat, revalidate, setSize } = useSWRInfinite<IChat[]>(\r\n    (index) => `/api/workspaces/${workspace}/channels/${channel}/chats?perPage=20&page=${index + 1}`,\r\n    fetcher,\r\n  );\r\n  const { data: channelMembersData } = useSWR<IUser[]>(\r\n    myData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket] = useSocket(workspace);\r\n  const isEmpty = chatData?.[0]?.length === 0;\r\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false;\r\n  const scrollbarRef = useRef<Scrollbars>(null);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n  const [dragOver, setDragOver] = useState(false);\r\n\r\n  // 0초 A: 안녕~(optimistic UI)\r\n  // 1초 B: 안녕~\r\n  // 2초 A: 안녕~(실제 서버)\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      console.log(chat);\r\n      if (chat?.trim() && chatData && channelData) {\r\n        const savedChat = chat;\r\n        mutateChat((prevChatData) => {\r\n          prevChatData?.[0].unshift({\r\n            id: (chatData[0][0]?.id || 0) + 1,\r\n            content: savedChat,\r\n            UserId: myData.id,\r\n            User: myData,\r\n            ChannelId: channelData.id,\r\n            Channel: channelData,\r\n            createdAt: new Date(),\r\n          });\r\n          return prevChatData;\r\n        }, false).then(() => {\r\n          setChat('');\r\n          scrollbarRef.current?.scrollToBottom();\r\n        });\r\n        axios\r\n          .post(`/api/workspaces/${workspace}/channels/${channel}/chats`, {\r\n            content: chat,\r\n          })\r\n          .then(() => {\r\n            revalidate();\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    },\r\n    [chat, chatData, myData, channelData, workspace, channel],\r\n  );\r\n\r\n  const onMessage = useCallback(\r\n    (data: IChat) => {\r\n      // id는 상대방 아이디\r\n      if (data.Channel.name === channel && (data.content.startsWith('uploads\\\\') || data.UserId !== myData?.id)) {\r\n        mutateChat((chatData) => {\r\n          chatData?.[0].unshift(data);\r\n          return chatData;\r\n        }, false).then(() => {\r\n          if (scrollbarRef.current) {\r\n            if (\r\n              scrollbarRef.current.getScrollHeight() <\r\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\r\n            ) {\r\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\r\n              setTimeout(() => {\r\n                scrollbarRef.current?.scrollToBottom();\r\n              }, 50);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [channel, myData],\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket?.on('message', onMessage);\r\n    return () => {\r\n      socket?.off('message', onMessage);\r\n    };\r\n  }, [socket, onMessage]);\r\n\r\n  // 로딩 시 스크롤바 제일 아래로\r\n  useEffect(() => {\r\n    if (chatData?.length === 1) {\r\n      console.log('toBottomWhenLoaded', scrollbarRef.current);\r\n      setTimeout(() => {\r\n        console.log('scrollbar', scrollbarRef.current);\r\n        scrollbarRef.current?.scrollToBottom();\r\n      }, 500);\r\n    }\r\n  }, [chatData]);\r\n\r\n  const onClickInviteChannel = useCallback(() => {\r\n    setShowInviteChannelModal(true);\r\n  }, []);\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowInviteChannelModal(false);\r\n  }, []);\r\n\r\n  const onChangeFile = useCallback((e) => {\r\n    const formData = new FormData();\r\n    if (e.target.files) {\r\n      // Use DataTransferItemList interface to access the file(s)\r\n      for (let i = 0; i < e.target.files.length; i++) {\r\n        const file = e.target.files[i].getAsFile();\r\n        console.log('... file[' + i + '].name = ' + file.name);\r\n        formData.append('image', file);\r\n      }\r\n    }\r\n    axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {});\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      console.log(e);\r\n      const formData = new FormData();\r\n      if (e.dataTransfer.items) {\r\n        // Use DataTransferItemList interface to access the file(s)\r\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n          // If dropped items aren't files, reject them\r\n          if (e.dataTransfer.items[i].kind === 'file') {\r\n            const file = e.dataTransfer.items[i].getAsFile();\r\n            console.log(e, '.... file[' + i + '].name = ' + file.name);\r\n            formData.append('image', file);\r\n          }\r\n        }\r\n      } else {\r\n        // Use DataTransfer interface to access the file(s)\r\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\r\n          console.log(e, '... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\r\n          formData.append('image', e.dataTransfer.files[i]);\r\n        }\r\n      }\r\n      axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {\r\n        setDragOver(false);\r\n      });\r\n    },\r\n    [workspace, channel],\r\n  );\r\n\r\n  const onDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  if (!myData || !myData) {\r\n    return null;\r\n  }\r\n\r\n  const chatSections = makeSection(chatData ? chatData.flat().reverse() : []);\r\n\r\n  return (\r\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\r\n      <Header>\r\n        <span>#{channel}</span>\r\n        <div className=\"header-right\">\r\n          <span>{channelMembersData?.length}</span>\r\n          <button\r\n            onClick={onClickInviteChannel}\r\n            className=\"c-button-unstyled p-ia__view_header__button\"\r\n            aria-label=\"Add people to #react-native\"\r\n            data-sk=\"tooltip_parent\"\r\n            type=\"button\"\r\n          >\r\n            <i className=\"c-icon p-ia__view_header__button_icon c-icon--add-user\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n      </Header>\r\n      <ChatList chatSections={chatSections} ref={scrollbarRef} setSize={setSize} isReachingEnd={isReachingEnd} />\r\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\r\n      <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      />\r\n      {dragOver && <DragOver>업로드!</DragOver>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Channel;"],"sourceRoot":""}